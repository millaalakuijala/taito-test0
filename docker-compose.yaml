# NOTE: Remove all extra containers that you don't need.

taito-test0-ingress:
  container_name: taito-test0-ingress
  image: nginx:1.13.8-alpine
  restart: on-failure
  ports:
    - "8609:80"
  links:
    - taito-test0-admin:taito-test0-admin
    - taito-test0-client:taito-test0-client
    - taito-test0-server:taito-test0-server
  volumes:
    - "./docker-nginx.conf:/etc/nginx/nginx.conf"
    - "./docker-nginx.htpasswd:/etc/nginx/.htpasswd"

taito-test0-admin:
  container_name: taito-test0-admin
  build: ./admin
  dockerfile: ${dockerfile}
  restart: on-failure
  ports:
    - "3334"
  volumes:
    - "./admin:/admin"
    - "/admin/node_modules"
    - "/admin/flow-typed/npm"
  environment:
    COMMON_ENV: local
    NODE_ENV: development
    API_ROOT: ''
    API_URL: '/api'
    # NOTE: Remember that environment variables given to webpack are used only
    # during build. You should not put any environment specific variables here
    # because the same build artifacts (static files) will be used in
    # multiple environments (dev, test, staging, prod). Read environment
    # specific settings from the API. You can usually derive api location from
    # the browser url of the GUI.

taito-test0-client:
  container_name: taito-test0-client
  build: ./client
  dockerfile: ${dockerfile}
  restart: on-failure
  ports:
    - "3333"
  volumes:
    - "./client:/client"
    - "/client/node_modules"
    - "/client/flow-typed/npm"
  environment:
    COMMON_ENV: local
    NODE_ENV: development
    API_ROOT: ''
    API_URL: '/api'
    # NOTE: Remember that environment variables given to webpack are used only
    # during build. You should not put any environment specific variables here
    # because the same build artifacts (static files) will be used in
    # multiple environments (dev, test, staging, prod). Read environment
    # specific settings from the API. You can usually derive api location from
    # the browser url of the GUI.

taito-test0-server:
  container_name: taito-test0-server
  build: ./server
  dockerfile: ${dockerfile}
  restart: on-failure
  ports:
    - "3332"
  volumes:
    - "./server:/server"
    - "/server/node_modules"
    - "/server/flow-typed/npm"
  links:
    - taito-test0-cache:taito-test0-cache
    - taito-test0-database:taito-test0-database
    - taito-test0-storage:taito-test0-storage
  environment:
    COMMON_COMPANY: taito
    COMMON_PROJECT: taito-test0
    COMMON_ENV: local
    COMMON_DEBUG: 'false'
    COMMON_LOG_FORMAT: text
    COMMON_LOG_LEVEL: info      # trace, debug, info, warn, error, fatal
    NODE_ENV: development # TODO remove?
    ENV: dev # TODO remove?
    DEBUG: 'false' # TODO remove?
    API_BINDADDR: 0.0.0.0
    API_PORT: 3332
    JWT_SECRET: secret
    ADMIN_PASSWORD: password
    USER_PASSWORD: password
    DATABASE_HOST: taito-test0-database
    DATABASE_ID: taito_test0_local
    DATABASE_DB: taito_test0_local
    DATABASE_USER: taito_test0_local_app
    DATABASE_SECRET: secret
    DATABASE_POOL_MAX: '10'
    S3_URL: http://taito-test0-storage:9000/
    S3_REGION: milkyway
    S3_BUCKET: bucket
    S3_KEY_ID: 070UEOQR6LX4YPZLFU0V
    S3_KEY_SECRET: CVQVa33NekSiOJGnevSY5ITr8Rql8lFkp22WhLQ+

# taito-test0-bot:
#   container_name: taito-test0-bot
#   build: ./bot
#   dockerfile: ${dockerfile}
#   restart: on-failure
#   ports:
#     - "3330"
#   volumes:
#     - "./bot:/bot"
#     - "/bot/node_modules"
#     - "/bot/flow-typed/npm"
#   links:
#     - taito-test0-server:taito-test0-server
#   environment:
#     COMMON_ENV: local
#     COMMON_DEBUG: 'true'
#     COMMON_PROJECT: taito-test0
#     COMMON_COMPANY: taito
#     NODE_ENV: development
#     ENV: dev # TODO remove?
#     DEBUG: 'false'
#     API_BINDADDR: 0.0.0.0
#     API_PORT: 3332
#     ADMIN_PASSWORD: password
#     USER_PASSWORD: password

# taito-test0-worker:
#   container_name: taito-test0-worker
#   build: ./worker
#   dockerfile: ${dockerfile}
#   restart: on-failure
#   ports:
#     - "3331"
#   volumes:
#     - "./worker:/worker"
#     - "/worker/node_modules"
#     - "/worker/flow-typed/npm"
#   links:
#     - taito-test0-cache:taito-test0-cache
#     - taito-test0-database:taito-test0-database
#     - taito-test0-storage:taito-test0-storage
#   environment:
#     COMMON_ENV: local
#     COMMON_DEBUG: 'true'
#     COMMON_PROJECT: taito-test0
#     COMMON_COMPANY: taito
#     NODE_ENV: development
#     ENV: dev # TODO remove?
#     DEBUG: 'false'
#     API_BINDADDR: 0.0.0.0
#     API_PORT: 3331
#     DATABASE_HOST: taito-test0-database
#     DATABASE_ID: taito_test0_local
#     DATABASE_DB: taito_test0_local
#     DATABASE_USER: taito_test0_local_app
#     DATABASE_SECRET: secret
#     DATABASE_POOL_MAX: '10'
#     S3_URL: http://taito-test0-storage:9000/
#     S3_REGION: milkyway
#     S3_BUCKET: bucket
#     S3_KEY_ID: 070UEOQR6LX4YPZLFU0V
#     S3_KEY_SECRET: CVQVa33NekSiOJGnevSY5ITr8Rql8lFkp22WhLQ+

taito-test0-cache:
  container_name: taito-test0-cache
  image: redis:alpine
  restart: on-failure
  ports:
    - "6379"

# taito-test0-queue:
#   container_name: taito-test0-queue
#   image: rabbitmq:alpine
#   restart: on-failure
#   ports:
#     - "5672"

# "EXTERNAL RESOURCES"

taito-test0-database:
  container_name: taito-test0-database
  image: postgres:9.6
  restart: on-failure
  ports:
    - "7956:5432"
  environment:
    POSTGRES_DB: taito_test0_local
    POSTGRES_USER: taito_test0_local_app
    POSTGRES_PASSWORD: secret
  volumes:
    - "./database:/docker-entrypoint-initdb.d"

taito-test0-storage:
  container_name: taito-test0-storage
  image: minio/minio:latest
  restart: on-failure
  command: server /storage
  environment:
    MINIO_ACCESS_KEY: 070UEOQR6LX4YPZLFU0V
    MINIO_SECRET_KEY: CVQVa33NekSiOJGnevSY5ITr8Rql8lFkp22WhLQ+
  volumes:
    - "./storage:/storage"
